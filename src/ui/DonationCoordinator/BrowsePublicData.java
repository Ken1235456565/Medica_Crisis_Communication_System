/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.DonationCoordinator;

import Model.EcoSystem;
import Model.Organization.Organization;
import Model.PublicData.HealthStatistics;
import Model.PublicData.PublicDataService;
import Model.PublicData.RegionData;
import Model.PublicData.SymptomData;
import Model.User.UserAccount;
import java.awt.CardLayout;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import ui.VisitorDonor.*;
import util.CSVExporter;

/**
 *
 * @author tiankaining
 */
public class BrowsePublicData extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Organization organization;
    private UserAccount userAccount;
    private EcoSystem system; // To access public data from the whole system
    
    private PublicDataService publicDataService;
    private HealthStatistics currentHealthStats;

    public BrowsePublicData(JPanel userProcessContainer, Organization organization, UserAccount userAccount, EcoSystem system) {
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.userAccount = userAccount;
        this.system = system;
        initComponents();
        
        // 业务逻辑初始化
        this.publicDataService = new PublicDataService();
        initializeData();
        populateTimeSpanComboBox();
    }

    private void initializeData() {
        String defaultTimeSpan = "7 days";
        loadDataForTimeSpan(defaultTimeSpan);
    }

    private void populateTimeSpanComboBox() {
        cmbTimeSpan.addActionListener(e -> {
            String selectedTimeSpan = (String) cmbTimeSpan.getSelectedItem();
            loadDataForTimeSpan(selectedTimeSpan);
        });
    }

    private void loadDataForTimeSpan(String timeSpan) {
        currentHealthStats = publicDataService.generateHealthStatistics(timeSpan);
        populateDataOverviewTable();
        populateSymptomSummaryTable();
    }

    private void populateDataOverviewTable() {
        DefaultTableModel model = (DefaultTableModel) tblDataOverview.getModel();
        model.setRowCount(0);

        for (RegionData region : currentHealthStats.getRegionData()) {
            Object[] row = {
                region.getRegionName(),
                region.getTotalPatients(),
                region.getDischargedCount(),
                region.getHospitalizedCount(),
                region.getDeathsCount(),
                Math.round(region.getAverageLengthOfStay() * 100.0) / 100.0
            };
            model.addRow(row);
        }
    }

    private void populateSymptomSummaryTable() {
        DefaultTableModel model = (DefaultTableModel) tblSummaryOfSymptom.getModel();
        model.setRowCount(0);

        for (RegionData region : currentHealthStats.getRegionData()) {
            SymptomData symptoms = region.getSymptomSummary();
            Object[] row = {
                region.getRegionName(),
                symptoms.getFeverCount(),
                symptoms.getCoughCount(),
                symptoms.getChestTightnessCount(),
                symptoms.getComaCount()
            };
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbTimeSpan = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDataOverview = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSummaryOfSymptom = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnDataOverviewChart = new javax.swing.JButton();
        btnExportToCSV = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel1.setText("Browse Public Data");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel2.setText("Data overview:");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel3.setText("Time Span:");

        cmbTimeSpan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "3 days", "7 days", "30 days" }));

        tblDataOverview.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Region", "Total Patients", "Discharged", "Hospitalized", "Deaths", "Average length of stay"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDataOverview);

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel4.setText("Summary of symptom:");

        tblSummaryOfSymptom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Region", "Fever", "Cough", "Chest tightness", "Coma"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblSummaryOfSymptom);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDataOverviewChart.setText("Data Overview Chart");
        btnDataOverviewChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataOverviewChartActionPerformed(evt);
            }
        });

        btnExportToCSV.setText("Export To CSV");
        btnExportToCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportToCSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(393, 393, 393)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(91, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDataOverviewChart, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExportToCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(57, 57, 57)
                        .addComponent(cmbTimeSpan, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbTimeSpan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDataOverviewChart)
                    .addComponent(btnExportToCSV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(63, 63, 63))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDataOverviewChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataOverviewChartActionPerformed
        StringBuilder chartData = new StringBuilder();
        chartData.append("Data Overview Chart\n\n");
        chartData.append("Total Patients: ").append(currentHealthStats.getTotalPatients()).append("\n");
        chartData.append("Discharged: ").append(currentHealthStats.getDischargedCount()).append("\n");
        chartData.append("Hospitalized: ").append(currentHealthStats.getHospitalizedCount()).append("\n");
        chartData.append("Deaths: ").append(currentHealthStats.getDeathsCount()).append("\n");
        chartData.append("Average Length of Stay: ").append(
            Math.round(currentHealthStats.getAverageLengthOfStay() * 100.0) / 100.0).append(" days");
        
        JOptionPane.showMessageDialog(this, chartData.toString(), "Data Overview Chart", JOptionPane.INFORMATION_MESSAGE);        
    }//GEN-LAST:event_btnDataOverviewChartActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnExportToCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportToCSVActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Save Public Data as CSV");
        fileChooser.setSelectedFile(new java.io.File("public_data.csv"));

        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            CSVExporter exporter = new CSVExporter();
            exporter.exportPublicData(currentHealthStats, fileChooser.getSelectedFile().getAbsolutePath());
            JOptionPane.showMessageDialog(this, "Data exported successfully!", "Export Complete", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnExportToCSVActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDataOverviewChart;
    private javax.swing.JButton btnExportToCSV;
    private javax.swing.JComboBox<String> cmbTimeSpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDataOverview;
    private javax.swing.JTable tblSummaryOfSymptom;
    // End of variables declaration//GEN-END:variables
}
